services:
  web:
    build:
      context: ./my-next-app
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/jardins_cocagne
      - NODE_ENV=development
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./my-next-app:/app
      - /app/node_modules
    command: node server.js

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: jardins_cocagne
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./my-next-app/lib/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d jardins_cocagne"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-adminpassword}
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data: